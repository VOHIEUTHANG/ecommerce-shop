-- MySQL Script generated by MySQL Workbench
-- Mon Aug  1 15:05:41 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema shoe_store
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema shoe_store
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `shoe_store` DEFAULT CHARACTER SET utf8 ;
USE `shoe_store` ;

-- -----------------------------------------------------
-- Table `shoe_store`.`ROLE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`ROLE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `roleName` VARCHAR(30) NOT NULL,
  `descriptions` VARCHAR(100) NULL,
  `permissionCode` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`ACCOUNT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`ACCOUNT` (
  `username` VARCHAR(30) NOT NULL,
  `password` VARCHAR(200) NOT NULL,
  `ROLE_ID` INT NOT NULL,
  `avatar` VARCHAR(200) NULL,
  `isVerify` TINYINT NULL,
  `isLocked` TINYINT NULL,
  PRIMARY KEY (`username`),
  INDEX `fk_ACCOUNT_ROLE_idx` (`ROLE_ID` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`USER` (
  `username` VARCHAR(30) NOT NULL,
  `fullName` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phoneNumber` VARCHAR(12) NOT NULL,
  `gender` ENUM('Male', 'Female', 'Flex') NULL,
  `address` VARCHAR(50) NULL,
  PRIMARY KEY (`username`),
  INDEX `fk_USER_INFO_ACCOUNT1_idx` (`username` ASC) VISIBLE,
  CONSTRAINT `fk_USER_INFO_ACCOUNT1`
    FOREIGN KEY (`username`)
    REFERENCES `shoe_store`.`ACCOUNT` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`DELIVERY_ADDRESS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`DELIVERY_ADDRESS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `province` VARCHAR(45) NOT NULL,
  `district` VARCHAR(45) NOT NULL,
  `wards` VARCHAR(45) NOT NULL,
  `address_detail` VARCHAR(45) NULL,
  `username` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_DELIVERY_ADDRESS_USER_INFO1_idx` (`username` ASC) VISIBLE,
  CONSTRAINT `fk_DELIVERY_ADDRESS_USER_INFO1`
    FOREIGN KEY (`username`)
    REFERENCES `shoe_store`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`EMPLOYEE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`EMPLOYEE` (
  `username` VARCHAR(30) NOT NULL,
  `fullName` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phoneNumber` VARCHAR(12) NOT NULL,
  `CCCD` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `gender` ENUM('Male', 'Female', 'Flex') NOT NULL,
  `salary` BIGINT NOT NULL,
  `startDate` DATE NOT NULL,
  `isWorking` TINYINT NOT NULL,
  INDEX `fk_EMPLOYEE_INFO_ACCOUNT1_idx` (`username` ASC) VISIBLE,
  PRIMARY KEY (`username`),
  CONSTRAINT `fk_EMPLOYEE_INFO_ACCOUNT1`
    FOREIGN KEY (`username`)
    REFERENCES `shoe_store`.`ACCOUNT` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`CATEGORY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`CATEGORY` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `descriptions` VARCHAR(100) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`BRAND`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`BRAND` (
  `ID` SMALLINT NOT NULL AUTO_INCREMENT,
  `brandName` VARCHAR(45) NULL,
  `popularLevel` ENUM('very_popular', 'popular', 'medium', 'low', 'anonymous') NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`PRODUCT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`PRODUCT` (
  `ID` SMALLINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(80) NULL,
  `isSelling` TINYINT NOT NULL,
  `sellStartDate` DATETIME NULL,
  `price` INT NOT NULL,
  `slug` VARCHAR(100) NOT NULL,
  `suitableFor` ENUM('male', 'female', 'both') NULL,
  `BRAND_ID` SMALLINT NOT NULL,
  `specifications` VARCHAR(300) NULL,
  `descriptions` VARCHAR(2000) NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_PRODUCT_BRAND1_idx` (`BRAND_ID` ASC) VISIBLE,
  UNIQUE INDEX `slug_UNIQUE` (`slug` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_BRAND1`
    FOREIGN KEY (`BRAND_ID`)
    REFERENCES `shoe_store`.`BRAND` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`PRICE_ADJUSTMENT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`PRICE_ADJUSTMENT` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_ID` SMALLINT NOT NULL,
  `adjustmentTime` DATETIME NOT NULL,
  `price` INT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_PRICE_ADJUSTMENT_PRODUCT1_idx` (`PRODUCT_ID` ASC) VISIBLE,
  CONSTRAINT `fk_PRICE_ADJUSTMENT_PRODUCT1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoe_store`.`PRODUCT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`PRODUCT_ITEMS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`PRODUCT_ITEMS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `PRODUCT_ID` SMALLINT NOT NULL,
  `inventory` INT NOT NULL,
  `size` FLOAT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_PRODUCT_ITEMS_PRODUCT1_idx` (`PRODUCT_ID` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_ITEMS_PRODUCT1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoe_store`.`PRODUCT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`DISCOUNT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`DISCOUNT` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `startDate` DATETIME NULL,
  `endDate` DATETIME NULL,
  `percentReduction` SMALLINT NULL,
  `isApply` TINYINT NULL,
  `PRODUCT_ID` SMALLINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_DISCOUNT_PRODUCT1_idx` (`PRODUCT_ID` ASC) VISIBLE,
  CONSTRAINT `fk_DISCOUNT_PRODUCT1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoe_store`.`PRODUCT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`PRODUCT_CATEGORY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`PRODUCT_CATEGORY` (
  `PRODUCT_ID` SMALLINT NOT NULL,
  `CATEGORY_ID` INT NOT NULL,
  PRIMARY KEY (`PRODUCT_ID`, `CATEGORY_ID`),
  INDEX `fk_PRODUCT_has_CATEGORY_CATEGORY1_idx` (`CATEGORY_ID` ASC) VISIBLE,
  INDEX `fk_PRODUCT_has_CATEGORY_PRODUCT1_idx` (`PRODUCT_ID` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_has_CATEGORY_PRODUCT1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoe_store`.`PRODUCT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCT_has_CATEGORY_CATEGORY1`
    FOREIGN KEY (`CATEGORY_ID`)
    REFERENCES `shoe_store`.`CATEGORY` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`PRODUCT_IMAGES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`PRODUCT_IMAGES` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `imageURL` VARCHAR(300) NOT NULL,
  `PRODUCT_ID` SMALLINT NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_PRODUCT_IMAGES_PRODUCT1_idx` (`PRODUCT_ID` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_IMAGES_PRODUCT1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoe_store`.`PRODUCT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`CART`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`CART` (
  `username` VARCHAR(30) NOT NULL,
  `PRODUCT_ITEMS_ID` INT NOT NULL,
  `quantity` SMALLINT NOT NULL,
  PRIMARY KEY (`username`, `PRODUCT_ITEMS_ID`),
  INDEX `fk_USER_INFO_has_PRODUCT_ITEMS_PRODUCT_ITEMS1_idx` (`PRODUCT_ITEMS_ID` ASC) VISIBLE,
  INDEX `fk_USER_INFO_has_PRODUCT_ITEMS_USER_INFO1_idx` (`username` ASC) VISIBLE,
  CONSTRAINT `fk_USER_INFO_has_PRODUCT_ITEMS_USER_INFO1`
    FOREIGN KEY (`username`)
    REFERENCES `shoe_store`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_INFO_has_PRODUCT_ITEMS_PRODUCT_ITEMS1`
    FOREIGN KEY (`PRODUCT_ITEMS_ID`)
    REFERENCES `shoe_store`.`PRODUCT_ITEMS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`ORDER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`ORDER` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(30) NOT NULL,
  `totalMoney` BIGINT NOT NULL,
  `paymentStatus` TINYINT NULL,
  `diliveryStatus` VARCHAR(40) NULL,
  `orderStatus` ENUM('processing', 'cancle', 'success') NULL,
  `orderTime` DATETIME NOT NULL,
  `paymentTime` DATETIME NULL,
  `DELIVERY_ADDRESS_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `DELIVERY_ADDRESS_ID`),
  INDEX `fk_ORDER_USER1_idx` (`username` ASC) VISIBLE,
  INDEX `fk_ORDER_DELIVERY_ADDRESS1_idx` (`DELIVERY_ADDRESS_ID` ASC) VISIBLE,
  CONSTRAINT `fk_ORDER_USER1`
    FOREIGN KEY (`username`)
    REFERENCES `shoe_store`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ORDER_DELIVERY_ADDRESS1`
    FOREIGN KEY (`DELIVERY_ADDRESS_ID`)
    REFERENCES `shoe_store`.`DELIVERY_ADDRESS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`ORDER_DETAIL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`ORDER_DETAIL` (
  `PRODUCT_ITEMS_ID` INT NOT NULL,
  `ORDER_ID` INT NOT NULL,
  `quantity` SMALLINT NULL,
  `price` INT NULL,
  `discount_percent` SMALLINT NULL,
  `intoMoney` BIGINT NULL,
  PRIMARY KEY (`PRODUCT_ITEMS_ID`, `ORDER_ID`),
  INDEX `fk_PRODUCT_ITEMS_has_ORDER_ORDER1_idx` (`ORDER_ID` ASC) VISIBLE,
  INDEX `fk_PRODUCT_ITEMS_has_ORDER_PRODUCT_ITEMS1_idx` (`PRODUCT_ITEMS_ID` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_ITEMS_has_ORDER_PRODUCT_ITEMS1`
    FOREIGN KEY (`PRODUCT_ITEMS_ID`)
    REFERENCES `shoe_store`.`PRODUCT_ITEMS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCT_ITEMS_has_ORDER_ORDER1`
    FOREIGN KEY (`ORDER_ID`)
    REFERENCES `shoe_store`.`ORDER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`PRODUCT_REVIEW`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`PRODUCT_REVIEW` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(30) NOT NULL,
  `PRODUCT_ID` SMALLINT NOT NULL,
  `content` VARCHAR(100) NOT NULL,
  `imageURL` VARCHAR(100) NULL,
  PRIMARY KEY (`id`, `username`, `PRODUCT_ID`),
  INDEX `fk_USER_has_PRODUCT_PRODUCT1_idx` (`PRODUCT_ID` ASC) VISIBLE,
  INDEX `fk_USER_has_PRODUCT_USER1_idx` (`username` ASC) VISIBLE,
  CONSTRAINT `fk_USER_has_PRODUCT_USER1`
    FOREIGN KEY (`username`)
    REFERENCES `shoe_store`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_has_PRODUCT_PRODUCT1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoe_store`.`PRODUCT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`PRODUCT_RATING`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`PRODUCT_RATING` (
  `PRODUCT_ID` SMALLINT NOT NULL,
  `username` VARCHAR(30) NOT NULL,
  `starCount` SMALLINT NOT NULL,
  PRIMARY KEY (`PRODUCT_ID`, `username`),
  INDEX `fk_PRODUCT_has_USER_USER1_idx` (`username` ASC) VISIBLE,
  INDEX `fk_PRODUCT_has_USER_PRODUCT1_idx` (`PRODUCT_ID` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_has_USER_PRODUCT1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoe_store`.`PRODUCT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCT_has_USER_USER1`
    FOREIGN KEY (`username`)
    REFERENCES `shoe_store`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`WISH_LIST`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`WISH_LIST` (
  `PRODUCT_ID` SMALLINT NOT NULL,
  `username` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`PRODUCT_ID`, `username`),
  INDEX `fk_PRODUCT_has_USER_USER2_idx` (`username` ASC) VISIBLE,
  INDEX `fk_PRODUCT_has_USER_PRODUCT2_idx` (`PRODUCT_ID` ASC) VISIBLE,
  CONSTRAINT `fk_PRODUCT_has_USER_PRODUCT2`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `shoe_store`.`PRODUCT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCT_has_USER_USER2`
    FOREIGN KEY (`username`)
    REFERENCES `shoe_store`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `shoe_store`.`REFRESH_TOKENS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `shoe_store`.`REFRESH_TOKENS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(30) NOT NULL,
  `refreshToken` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_REFRESH_TOKENS_USER1_idx` (`username` ASC) VISIBLE,
  CONSTRAINT `fk_REFRESH_TOKENS_USER1`
    FOREIGN KEY (`username`)
    REFERENCES `shoe_store`.`USER` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `shoe_store`;

DELIMITER $$
USE `shoe_store`$$
CREATE DEFINER = CURRENT_USER TRIGGER `shoe_store`.`PRODUCT_BEFORE_UPDATE` BEFORE UPDATE ON `PRODUCT` FOR EACH ROW
BEGIN
INSERT INTO PRICE_ADJUSTMENT
SET 
PRODUCT_ID = OLD.ID,
adjustmentTime = NOW(),
price = OLD.price;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
