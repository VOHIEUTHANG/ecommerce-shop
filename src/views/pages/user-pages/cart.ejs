<html lang="en">
   <head>
      <%- include('../../partials/head'); %>
      <title>CART</title>
      <link rel="stylesheet" href="/css/cart.css" />
   </head>
   <body>
      <div id="root">
         <%- include('../../partials/header') %>
         <div id="main">
            <div class="cart-main-area cart">
               <div class="container">
                  <div class="row">
                     <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <form action="#" id="main-form">
                           <% if(cartList.length === 0) { %>
                           <div
                              style="flex-direction: column;min-height: 50vh;"
                              class="d-flex justify-content-center align-items-center"
                              >
                              <img width="200px" src="/assets/images/noPurchase/emptyCart.png"/>
                              <p style="text-align: center; margin-top: 4rem;font-size:1.8rem" class="nothing-title">
                                 Bạn không có sản phẩm nào trong giỏ hàng !
                              </p>
                              <a href="/" class="button light" style="margin-top: 2rem;">Mua hàng</a>
                           </div>
                           <% } else{ %>
                           <div class="table-content table-responsive">
                              <table>
                                 <thead>
                                    <tr>
                                       <th>Xóa</th>
                                       <th>Hình Ảnh</th>
                                       <th>Tên sản phẩm</th>
                                       <th>Giá</th>
                                       <th>Số lượng</th>
                                       <th>Size</th>
                                       <th>Giảm giá</th>
                                       <th>Tổng tiền</th>
                                    </tr>
                                 </thead>
                                 <tbody>
                                       <% cartList.forEach(cart=>{ %>
                                          <tr data-product-id="<%= cart.PRODUCT_ITEMS_ID %>" >
                                             <td class="product-remove">
                                                <div class="product-remove-btn" data-cart-price="<%= cart.PRODUCT_ITEM.PRODUCT.price  %>" data-product-id="<%= cart.PRODUCT_ITEMS_ID %>">
                                                   <i class="ti-close"></i>
                                                </div>
                                             </td>
                                             <td class="product-thumbnail">
                                                <a href="/product/<%= cart.PRODUCT_ITEM.PRODUCT.slug %>"
                                                   ><img
                                                      src="<%= cart.PRODUCT_ITEM.PRODUCT.imageURL  %>"
                                                      alt=""
                                                />
                                             <% if(cart.PRODUCT_ITEM.PRODUCT.discounts) {%>
                                               <div class="discount-label">
                                                -
                                                <span class="cart-discount">
                                                   <%= cart.PRODUCT_ITEM.PRODUCT.discounts.percentReduction  %>
                                                </span>
                                                %
                                                </div>
                                             <% } %>
                                             </a>
                                             </td>
                                             <td class="product-name">
                                                <a href="/product/<%= cart.PRODUCT_ITEM.PRODUCT.slug %>"> <%= cart.PRODUCT_ITEM.PRODUCT.name %> </a>
                                             </td>
                                             <td class="product-price-cart">
                                                <span  class="amount cart-price"><%= cart.PRODUCT_ITEM.PRODUCT.price %></span>
                                             </td>
                                             <td class="product-quantity">
                                                <div class="cart-plus-minus" data-origin-price="<%= cart.PRODUCT_ITEM.PRODUCT.price %>"  data-product-count="<%= cart.quantity %>" data-subtotal="<%= cart.PRODUCT_ITEM.thisPrice %>" data-discount="<%= cart.PRODUCT_ITEM?.thisDiscountPrice %>" data-username="<%= cart.username %>" data-product-id="<%= cart.PRODUCT_ITEMS_ID %>" data-inventory="<%= cart.PRODUCT_ITEM.inventory %>">
                                                   <div class="dec qtybutton">-</div>
                                                   <input
                                                      type="text"
                                                      value="<%= cart.quantity || 1 %>"
                                                      name="qtybutton"
                                                      class="cart-plus-minus-box"
                                                      class="product-count"
                                                   />
                                                   <div class="inc qtybutton">+</div>
                                                </div>
                                             </td>
                                             <td class="amount">
                                                <div><%= cart.PRODUCT_ITEM.size %></div>
                                             </td>
                                             <td >
                                                <div class="discount d-flex justify-content-center">
                                                   - 
                                                   <span class="cart-discount-price">
                                                      <%= cart.PRODUCT_ITEM.PRODUCT.discounts ? cart.PRODUCT_ITEM.thisDiscountPrice : ' 0 VND'   %>
                                                   </span>
                                                </div>
                                             </td>
                                             <td class="product-subtotal">
                                                <%= cart.PRODUCT_ITEM.thisPrice %>
                                             </td>
                                          </tr>
                                       <% }) %>
                                    <% } %>
                                 </tbody>
                              </table>
                           </div>
                           <% if(cartList.length !== 0) { %>
                              <hr>
                              <div class="row justify-content-center">
                                 <div class="col-md-8" >
                                    <div class="cart-page-total">
                                       <h2>Đơn hàng</h2>
                                       <ul>
                                          <li>Tổng tiền hàng<span class="origin-price-total origin-price"><%= cartList.originPrice %></span></li>
                                          <li>Giảm giá sản phẩm<span class=" discount">-
                                             <span class="discount-total"><%= cartList.discountPrice %></span>
                                          </span></li>
                                          <li>Phí vận chuyển<span class="shipment">+ 30.000 VND</span></li>
                                          <li>Tổng tiền thực thanh toán<span class="payment-total"><%= cartList.totalPrice %></span></li>
                                       </ul>
                                       <div id="purchase" class="button btn-checkout large">Mua hàng</a>
                                    </div>
                                 </div>
                              </div>
                           <% }%>
                        </form>
                     </div>
                  </div>
               </div>
               <% if(cartList?.length > 0){ %>
                  <div id="choose-address-modal" class="">
                     <div class="my-overlay">
                        <div class="my-modal">
                           <form id="form-update-address">
                              <div class="head">
                                 <div class="title">Chọn địa chỉ nhận hàng</div>
                              </div>
                              <div class="body">
                                 <div class="address-wrapper">
                                    <% if(addressList?.length > 0) { %>
                                    <% addressList.forEach((address,index) => { %>
                                       <div class="form-check" style="display:flex;align-items:center;margin-bottom:10px;">
                                          <input data-address-id="<%= address.ID %>" <%= index === 0 ? "checked" : "" %> class="form-check-input" style="cursor:pointer;" type="radio" name="address" id="input-address-<%= index %>">
                                          <label class="form-check-label" style="margin-left:14px;cursor:pointer;" for="input-address-<%= index %>">
                                          <div class="content" style="text-align: left">
                                             <div class="sub-addres">
                                                <%= address.address_detail %>
                                             </div>
                                             <div class="main-address">
                                                <span class="ward">
                                                   <%= address.wards %>
                                                </span>
                                                ,
                                                <span class="district">
                                                   <%= address.district %>
                                                </span
                                                >
                                                ,
                                                <span class="province">
                                                   <%= address.province %>
                                                </span
                                                >
                                             </div>
                                          </div>
                                          </label>
                                       </div>
                                    <% }) %>
                                    <% } else {%>
                                      <div style="height: 50%;font-size:2rem;display:flex;justify-content:center;">
                                       <div style="text-align:center;margin-bottom:2rem;margin-right:1rem">Bạn chưa có địa chỉ nào ?</div>
                                       <a style="text-transform: initial;text-decoration: underline;color:dodgerblue;" href="/delivery-address">Thêm địa chỉ mới</a>
                                      </div>
                                    <% } %>
                                    </div>
                              </div>
                              <div class="foot" style="display:flex;justify-content:center">
                                 <button class="button" id="order-btn" type="submit">ĐẶT HÀNG</button>
                              </div>
                              <div class="btn-close-modal">
                                 <div class="ti-close"></div>
                              </div>
                           </form>
                        </div>
                     </div>
                  </div>
               <% } %>
            </div>
         </div>
         <%- include('../../partials/footer') %>
      </div>
      <%- include('../../partials/foot') %>
      <!-- REMOVE CART HANLDER -->
      <script type="module">
         import { privateRequestHandler, formatToCurrency } from '/js/utils/index.js';
         import convertFromStringToNumber from '/js/utils/convertNumber.js'; 
         import deleteCartItemOnLick from '/js/utils/deleteCartItemHandler.js';
         $(() => {
         const deleteCartBtn = $('.product-remove-btn');
         deleteCartBtn?.click(function(){
            const productID = this.dataset.productId;
            const cartProductCount = $('.table-content tbody > tr').length;
            const buttonRemoveItem =  $(`.cart-delete[data-product-id="${productID}"]`);
            const mainForm = $('#main-form');
            const mainTable = $('.table-content');

            const cartRow = $(this).closest('tr');
            let originPrice = cartRow.find('.cart-price').first()?.text()?.trim() || 0;
            console.log("🚀 ~ file: cart.ejs ~ line 150 ~ originPrice", originPrice)
            let quantity = cartRow.find('.product-quantity input').first()?.val()?.trim() || 1;
            console.log('quantity',quantity)
            let discount = cartRow.find('.cart-discount-price').first()?.text()?.trim() || 0;
            let finalPrice = cartRow.find('.product-subtotal').first()?.text()?.trim() || 0;

            buttonRemoveItem[0]?.click();
            if(cartProductCount === 1){
               mainTable.remove();
               mainForm.html(`
               <div
                  style="flex-direction: column;min-height: 50vh;"
                  class="d-flex justify-content-center align-items-center"
                  >
                  <img width="200px" src="/assets/images/noPurchase/emptyCart.png"/>
                  <p style="text-align: center; margin-top: 4rem;font-size:1.8rem" class="nothing-title">
                     Bạn không có sản phẩm nào trong giỏ hàng !
                  </p>
                  <a href="/" class="button light" style="margin-top: 2rem;">Mua hàng</a>
               </div>
               `);

            }else{
               let originPriceTotal = $('.origin-price-total').text().trim();
               let discountTotal = $('.discount-total').text().trim() || 0;
               let finalPriceTotal = $('.payment-total').text().trim();
               originPriceTotal = convertFromStringToNumber(originPriceTotal);
              
               discountTotal = convertFromStringToNumber(discountTotal);
               finalPriceTotal = convertFromStringToNumber(finalPriceTotal);
               quantity = Number(quantity);
               originPrice = convertFromStringToNumber(originPrice);
               if(discount !== 0){
                  discount = convertFromStringToNumber(discount);
               }
               finalPrice = convertFromStringToNumber(finalPrice);

               const totalOriginAmountRemaining = formatToCurrency(originPriceTotal - originPrice * quantity) ;
               const totalDiscountAmountRemaining = formatToCurrency(discountTotal - discount);
               const totalFinalAmountRemaining = formatToCurrency(finalPriceTotal - finalPrice);

               $('.origin-price-total').text(totalOriginAmountRemaining);
               $('.discount-total').text(totalDiscountAmountRemaining);
               $('.payment-total').text(totalFinalAmountRemaining);
               cartRow.remove();
            }
              
           
         });
   });
      </script>
      <!-- MODIFY QUANTITY OF GOODS HANLDER -->
      <script type="module">
         import { privateRequestHandler,formatToCurrency } from '/js/utils/index.js';
         import convertFromStringToNumber from '/js/utils/convertNumber.js'; 

         const plusBtn = $('.inc.qtybutton');
         const minusBtn = $('.dec.qtybutton');

         (function renderEditCartProductQuantity(){
            [...$('.cart-plus-minus')].forEach(productNode=>{
               const inventory = Number(productNode.dataset.inventory);
               const minusBtn = $(productNode).find(".dec.qtybutton");
               const plusBtn = $(productNode).find('.inc.qtybutton');

               const currentProductCount = Number($(productNode).find('.cart-plus-minus-box').val());
               if(currentProductCount <= 1){
                  minusBtn.addClass('disable');
               }

               if(currentProductCount >= inventory){
                  plusBtn.addClass('disable');
               }

            })
         })();

         const ModifyQuantityHandler = (productCountNumber,buttonNode,parentElement,type='minus')=>{
            return {
               async callUpdateCartAPI(){
                  const productItemID = parentElement[0].dataset.productId;
                  await privateRequestHandler('/api/user/edit-cart', 'patch', {productItemID,quantity:productCountNumber}, (data, status) => {
                     console.log(data);
                     if(data.status === 'error'){
                        toastr[data.status](data.message);
                     }
                  });
               },
               renderPrice(){
                  const tableRow = $(buttonNode).parents('tr');

                  let originPrice = parentElement[0].dataset.originPrice;
                  let discountPrice = parentElement[0].dataset.discount || '0';
                  let subtotalPrice = parentElement[0].dataset.subtotal;
                  const productQuantity = Number(parentElement[0].dataset.productCount);

                  const discountPriceNode = tableRow.find('.cart-discount-price');
                  const subtotalPriceNode = tableRow.find('.product-subtotal');

                  discountPrice = convertFromStringToNumber(discountPrice);
                  subtotalPrice = convertFromStringToNumber(subtotalPrice);
                  originPrice = convertFromStringToNumber(originPrice);

                  const discountPriceUnit =  discountPrice/productQuantity;
                  const productPriceUnit = subtotalPrice/productQuantity;

                  const remainingDiscountPrice = formatToCurrency(productCountNumber * discountPriceUnit);
                  const remainingProductPrice = formatToCurrency(productCountNumber * productPriceUnit);

                  discountPriceNode.text(remainingDiscountPrice);
                  subtotalPriceNode.text(remainingProductPrice);

                  let originTotalPrice = $('.origin-price-total').text().trim();
                  let discountTotalPrice = $('.discount-total').text().trim();
                  let paymentTotalPrice = $('.payment-total').text().trim();

                  originTotalPrice = convertFromStringToNumber(originTotalPrice);
                  discountTotalPrice = convertFromStringToNumber(discountTotalPrice);
                  paymentTotalPrice = convertFromStringToNumber(paymentTotalPrice);

                  const priceCalculaterByType = (totalPrice,priceAdjustment,type='minus') => {
                     return type==='minus' ? totalPrice - priceAdjustment : totalPrice + priceAdjustment;
                  }

                  $('.origin-price-total').text(formatToCurrency(priceCalculaterByType(originTotalPrice,originPrice,type)));
                  $('.discount-total').text(formatToCurrency(priceCalculaterByType(discountTotalPrice,discountPriceUnit,type)));
                  $('.payment-total').text(formatToCurrency(priceCalculaterByType(paymentTotalPrice,productPriceUnit,type)));

               },
               async run(){
                  await this.callUpdateCartAPI();
                  this.renderPrice();
               }
            }
         }

         minusBtn.click(async function() {
            if(!$(this).hasClass('disable')){
            const parentElement = $(this).parents(".cart-plus-minus"); 
            const inventory = parentElement[0].dataset.inventory;
            
            const productCount = parentElement.find('.cart-plus-minus-box');
            const plusBtn = parentElement.find('.inc.qtybutton');
            plusBtn.removeClass("disable");
            let productCountNumber = Number(productCount.val());
            
            if(productCountNumber > 1){
               productCountNumber--;
               productCount.val(productCountNumber);

               await ModifyQuantityHandler(productCountNumber,this,parentElement).run();
            }

            if(productCountNumber === 1) {
               $(this).addClass('disable');
            }
            }
         });

         plusBtn.click(async function() {
            if(!$(this).hasClass('disable')){
               const parentElement = $(this).parents(".cart-plus-minus"); 
            const inventory = parentElement[0].dataset.inventory;
            const productCount = parentElement.find('.cart-plus-minus-box');
            const minusBtn = parentElement.find('.dec.qtybutton');
            minusBtn.removeClass('disable');

            let productCountNumber = Number(productCount.val());

            if (productCountNumber <  Number(inventory)) {
               productCountNumber++;
               productCount.val(productCountNumber);
               await ModifyQuantityHandler(productCountNumber,this,parentElement,'plus').run();
            }

            if(productCountNumber ===  Number(inventory) ){
               $(this).addClass('disable');
            }
            }
         });
      </script>
      <!-- PURCHASE HANLDER -->
      <script type="module">
         import {privateRequestHandler} from '/js/utils/index.js';
         const purchaseBtn = $('#purchase');
         const chooseAddressModal = $('#choose-address-modal');
         const orderBtn = $('#order-btn');

         (function chooseAddressModalControl(){
            const modalContainer = $('.my-modal');
            const closeBtn = $('.btn-close-modal');
            const overlay = $('.my-overlay');
            closeBtn.click(() => {
               chooseAddressModal.removeClass('show');
            });
            overlay.mousedown(() => {
               chooseAddressModal.removeClass('show');
            });
            modalContainer.click((e) => {
               e.stopPropagation();
            });
            modalContainer.mousedown((e) => {
               e.stopPropagation();
            });
         })();

         purchaseBtn.click(function(e){
            chooseAddressModal.addClass('show');
         })

         orderBtn?.click(async function(e){
            e.preventDefault();
            const checkedAddress = $('.form-check-input:checked'); 

            if(checkedAddress.length > 0){
               const addressID = checkedAddress[0].dataset.addressId;
               if(addressID){
                  await privateRequestHandler('/api/user/order','post',{addressID},(data,status)=>{
                     const convertDataToObject = JSON.parse(data);
                     if(convertDataToObject.status === 'success'){
                        const cartDeleteBtns = $('.cart-delete');
                        [...cartDeleteBtns].forEach(deleteBtn => {
                           deleteBtn?.click();
                        })
                        window.location.href = '/purchase-order';
                     }
                  });
               }else{
                  toastr.error('Missing delivery address !');
               }
            }else{
               toastr.warning('Vui lòng thêm địa chỉ nhận hàng để tiếp tục !');
            }
         })
      </script>
   </body>
</html>
