<html lang="en">
   <head>
      <%- include('../../partials/head'); %>
      <title>CHANGE PASSWORD</title>
      <link rel="stylesheet" href="/css/delivery-address.css" />
   </head>
   <body>
      <div id="root">
         <%- include('../../partials/header',{user,isLoggedIn}) %>
         <div id="main">
            <div class="delivery-address">
               <div class="container">
                  <div class="row">
                     <div class="delivery-address-container">
                        <div class="wrapper">
                           <div class="head d-flex justify-content-between align-items-center">
                              <div class="title">Địa chỉ giao hàng</div>
                              <button class="button" id="add-address">
                                 <i class="ti-plus"></i>
                                 <span style="margin-left: 3px">Thêm địa chỉ</span>
                              </button>
                           </div>
                           <div class="body">
                              <ul class="address-list">
                                 <% if(addressList.length > 0) {%> <% addressList.forEach(address => { %>
                                 <li class="address-item d-flex justify-content-between">
                                    <div class="content" style="text-align: left">
                                       <div class="sub-addres" id="detail-<%= address.ID %>">
                                          <%= address.address_detail %>
                                       </div>
                                       <div class="main-address">
                                          <span id="ward-<%= address.ID %>" class="ward"><%= address.wards %></span>
                                          ,
                                          <span id="district-<%= address.ID %>" class="district"
                                             ><%= address.district %></span
                                          >
                                          ,
                                          <span id="province-<%= address.ID %>" class="province"
                                             ><%= address.province %></span
                                          >
                                       </div>
                                    </div>
                                    <div class="edit">
                                       <div
                                          data-address-id="<%= address.ID %>"
                                          class="update button light button--modify update-address"
                                       >
                                          <i class="fa-solid fa-pen-to-square"></i>
                                          Cập nhật
                                       </div>
                                       <div
                                          data-address-id="<%= address.ID %>"
                                          class="remove button button--danger delete-address"
                                       >
                                          <i class="fa-solid fa-trash-can"></i>
                                          Xóa
                                       </div>
                                    </div>
                                 </li>
                                 <% }) %> <% }else{ %>
                                 <div
                                    style="flex-direction: column"
                                    class="d-flex justify-content-center align-items-center"
                                 >
                                    <p
                                       style="text-align: center; margin-top: 2rem; font-size: 2rem"
                                       class="nothing-title"
                                    >
                                       Bạn không có địa chỉ nhận hàng nào !
                                    </p>
                                 </div>
                                 <% } %>
                              </ul>
                           </div>
                        </div>
                     </div>
                  </div>
               </div>
               <div id="add-address-modal" class="">
                  <div class="my-overlay">
                     <div class="my-modal">
                        <form id="form-address">
                           <div class="head">
                              <div class="title">Địa chỉ mới</div>
                           </div>
                           <div class="body">
                              <div class="province-picker">
                                 <select id="add-province" name="add-province"></select>
                              </div>
                              <div class="district-picker">
                                 <select id="add-district" name="add-district"></select>
                              </div>
                              <div class="ward-picker">
                                 <select id="add-ward" name="add-ward"></select>
                              </div>
                              <div>
                                 <input
                                    id="add-detail-address"
                                    class="input-address"
                                    placeholder="Nhập địa chỉ cụ thể"
                                    type="text"
                                    name="detail-address"
                                 />
                              </div>
                           </div>
                           <div class="foot">
                              <button class="button" type="submit">Thêm địa chỉ</button>
                           </div>
                           <div class="btn-close-modal">
                              <div class="ti-close"></div>
                           </div>
                        </form>
                     </div>
                  </div>
               </div>
               <div id="update-address-modal" class="">
                  <div class="my-overlay">
                     <div class="my-modal">
                        <form id="form-update-address">
                           <div class="head">
                              <div class="title">Cập nhật địa chỉ</div>
                           </div>
                           <div class="body">
                              <div class="province-picker">
                                 <select id="ud-province" name="ud-province"></select>
                              </div>
                              <div class="district-picker">
                                 <select id="ud-district" name="ud-district"></select>
                              </div>
                              <div class="ward-picker">
                                 <select id="ud-ward" name="ud-ward"></select>
                              </div>
                              <div>
                                 <input
                                    id="ud-detail-address"
                                    class="input-address"
                                    placeholder="Nhập địa chỉ cụ thể"
                                    type="text"
                                    name="detail-address"
                                 />
                              </div>
                           </div>
                           <div class="foot">
                              <button class="button" id="update-btn" type="submit">Lưu cập nhật</button>
                           </div>
                           <div class="btn-close-modal">
                              <div class="ti-close"></div>
                           </div>
                        </form>
                     </div>
                  </div>
               </div>
            </div>
         </div>
         <%- include('../../partials/footer') %>
      </div>
      <%- include('../../partials/foot') %>
      <script src="/js/library/localPicker.js"></script>
      <script type="module">
         import { privateRequestHandler } from '/js/utils/index.js';
         import { getFormData } from '/js/utils/index.js';
         $(() => {
            (() => {
               const addModal = $('#add-address-modal');
               const updateModal = $('#update-address-modal');

               const addressList = $('.address-list');
               return {
                  addAddressModalControl() {
                     const showButton = $('#add-address');
                     const modalContainer = $('#add-address-modal .my-modal');
                     const closeBtn = $('#add-address-modal .btn-close-modal');
                     const overlay = $('#add-address-modal .my-overlay');
                     showButton.click(function (e) {
                        addModal.addClass('show');
                     });
                     closeBtn.click(() => {
                        addModal.removeClass('show');
                     });
                     overlay.mousedown(() => {
                        addModal.removeClass('show');
                     });
                     modalContainer.click((e) => {
                        e.stopPropagation();
                     });
                     modalContainer.mousedown((e) => {
                        e.stopPropagation();
                     });
                  },
                  updateAddressModalControl() {
                     const modalContainer = $('#update-address-modal .my-modal');
                     const closeBtn = $('#update-address-modal .btn-close-modal');
                     const overlay = $('#update-address-modal .my-overlay');
                     closeBtn.click(() => {
                        updateModal.removeClass('show');
                     });
                     overlay.mousedown(() => {
                        updateModal.removeClass('show');
                     });
                     modalContainer.click((e) => {
                        e.stopPropagation();
                     });
                     modalContainer.mousedown((e) => {
                        e.stopPropagation();
                     });
                  },
                  validate() {
                     const validate = new window.JustValidate('#form-address');
                     validate
                        .addField('#add-detail-address', [
                           {
                              rule: 'required',
                              errorMessage: 'Không được để trống dòng này !',
                           },
                        ])
                        .addField('#add-province', [
                           {
                              rule: 'required',
                              errorMessage: 'KHông được để trống dòng này !',
                           },
                        ])
                        .addField('#add-district', [
                           {
                              rule: 'required',
                              errorMessage: 'KHông được để trống dòng này !',
                           },
                        ])
                        .addField('#add-ward', [
                           {
                              rule: 'required',
                              errorMessage: 'KHông được để trống dòng này !',
                           },
                        ])
                        .onSuccess(async (e) => {
                           const province = $('#add-province').find(':selected').text();
                           const ward = $('#add-ward').find(':selected').text();
                           const district = $('#add-district').find(':selected').text();
                           const detailAddress = $('#add-detail-address').val().trim();

                           const addressData = {
                              province,
                              district,
                              ward,
                              detailAddress,
                           };

                           await privateRequestHandler('/api/user/add-address', 'post', addressData, (data, status) => {
                              let parseData = JSON.parse(data);
                              if (parseData.status === 'success') {
                                 addModal.removeClass('show');
                                 const address = parseData.payload;
                                 const html = `
                                 <li class="address-item d-flex justify-content-between">
                                    <div class="content" style="text-align: left">
                                       <div class="sub-addres">${address.address_detail}</div>
                                       <div class="main-address">
                                          <span class="ward">${address.wards}</span>
                                          ,
                                          <span class="district">${address.district}</span>
                                          ,
                                          <span class="province">${address.province}</span>
                                       </div>
                                    </div>
                                    <div class="edit">
                                       <div data-address-id="${address.ID}" class="update button light button--modify update-address">
                                          <i class="fa-solid fa-pen-to-square"></i>
                                          Cập nhật
                                       </div>
                                       <div
                                          data-address-id="${address.ID}"
                                          class="remove button button--danger delete-address"
                                       >
                                          <i class="fa-solid fa-trash-can"></i>
                                          Xóa
                                       </div>
                                    </div>
                                 </li>
                                 `;

                                 if (addressList.children('li')?.length == 0) {
                                    addressList.html(html);
                                 } else {
                                    const currentHTML = addressList.html();
                                    const newHTML = html + currentHTML;
                                    addressList.html(newHTML);
                                 }
                                 this.deleteAddress();
                                 this.updateAddress();
                              }
                              toastr[parseData.status](parseData.message);
                           });
                        });
                  },
                  updateAddressValidate() {
                     const validate = new window.JustValidate('#form-update-address');
                     validate
                        .addField('#ud-detail-address', [
                           {
                              rule: 'required',
                              errorMessage: 'Không được để trống dòng này !',
                           },
                        ])
                        .addField('#ud-province', [
                           {
                              rule: 'required',
                              errorMessage: 'KHông được để trống dòng này !',
                           },
                        ])
                        .addField('#ud-district', [
                           {
                              rule: 'required',
                              errorMessage: 'KHông được để trống dòng này !',
                           },
                        ])
                        .addField('#ud-ward', [
                           {
                              rule: 'required',
                              errorMessage: 'KHông được để trống dòng này !',
                           },
                        ])
                        .onSuccess(async (e) => {
                           const addressID = e.submitter.dataset.id;

                           const province = $('#ud-province').find(':selected').text();
                           const ward = $('#ud-ward').find(':selected').text();
                           const district = $('#ud-district').find(':selected').text();
                           const detailAddress = $('#ud-detail-address').val().trim();

                           const addressData = {
                              ID: addressID,
                              province,
                              district,
                              ward,
                              detailAddress,
                           };

                           await privateRequestHandler(
                              '/api/user/update-address',
                              'put',
                              addressData,
                              (data, status) => {
                                 console.log(data);
                                 const rawData = JSON.parse(data);
                                 console.log(rawData);
                                 if (rawData.status === 'success') {
                                    updateModal.removeClass('show');
                                    $(`#detail-${rawData.payload.ID}`).text(rawData.payload.detailAddress);
                                    $(`#province-${rawData.payload.ID}`).text(rawData.payload.province);
                                    $(`#district-${rawData.payload.ID}`).text(rawData.payload.district);
                                    $(`#ward-${rawData.payload.ID}`).text(rawData.payload.ward);
                                    toastr[rawData.status](rawData.message);
                                 } else {
                                    toastr[rawData.status](rawData.message);
                                 }
                              },
                           );
                        });
                  },
                  deleteAddress() {
                     const deleteButton = $('.delete-address');
                     deleteButton.click(async function () {
                        const addressID = this.dataset.addressId;
                        const addressItem = $(this).parents('.address-item');

                        await privateRequestHandler(
                           `/api/user/delete-address/${addressID}`,
                           'delete',
                           {},
                           (data, status) => {
                              toastr[data?.status || 'error'](data.message);
                              if (data?.status === 'success') {
                                 addressItem.remove();
                                 if (addressList.children().length === 0) {
                                    addressList.html(`
                                    <div
                                       style="flex-direction: column"
                                       class="d-flex justify-content-center align-items-center"
                                    >
                                       <p
                                          style="text-align: center; margin-top: 2rem; font-size: 2rem"
                                          class="nothing-title"
                                       >
                                          Bạn không có địa chỉ nhận hàng nào !
                                       </p>
                                    </div>
                                    `);
                                 }
                              }
                           },
                        );
                     });
                  },
                  updateAddress() {
                     const updateBtn = $('.update-address');

                     updateBtn.click(async function (e) {
                        const addressID = this.dataset.addressId;
                        await privateRequestHandler(`/api/user/address/${addressID}`, 'get', {}, (data, status) => {
                           const targetAddress = JSON.parse(data);
                           console.log('targetAddress', targetAddress);
                           updateModal.addClass('show');
                           const detailAddressEle = $('#ud-detail-address');
                           const provinceEle = $('#ud-province');
                           const districtEle = $('#ud-district');
                           const wardEle = $('#ud-ward');
                           const submitBtn = $('#update-btn');

                           submitBtn[0].dataset.id = targetAddress.ID;

                           [...provinceEle.children('option')].forEach((option) => {
                              if ($(option).text() == targetAddress.province) {
                                 $(option).prop('selected', true);
                                 const changeEvent = new Event('change');
                                 provinceEle[0].dispatchEvent(changeEvent);
                              }
                           });
                           [...districtEle.children('option')].forEach((option) => {
                              if ($(option).text() == targetAddress.district) {
                                 $(option).prop('selected', true);
                                 const changeEvent = new Event('change');
                                 districtEle[0].dispatchEvent(changeEvent);
                              }
                           });
                           [...wardEle.children('option')].forEach((option) => {
                              if ($(option).text() == targetAddress.wards) {
                                 $(option).prop('selected', true);
                              }
                           });
                           detailAddressEle.val(targetAddress.address_detail);
                        });
                     });
                  },
                  run() {
                     this.addAddressModalControl();
                     this.updateAddressModalControl();
                     this.validate();
                     this.updateAddressValidate();
                     this.deleteAddress();
                     this.updateAddress();
                  },
               };
            })().run();
         });
      </script>
      <script>
         var localpicker1 = new LocalPicker({
            province: 'add-province',
            district: 'add-district',
            ward: 'add-ward',
            provincePrefix: true,
         });

         var localpicker2 = new LocalPicker({
            province: 'ud-province',
            district: 'ud-district',
            ward: 'ud-ward',
            provincePrefix: true,
         });
      </script>
   </body>
</html>
