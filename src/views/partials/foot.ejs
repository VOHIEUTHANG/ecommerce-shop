<!-- LIBRARY -->
<script src="/js/library/swipper.min.js"></script>
<script src="/js/library/boostrap.min.js"></script>
<script src="/js/library/justValidate.min.js"></script>
<script src="/js/library/axios.min.js"></script>
<script src="/js/library/popper.min.js"></script>
<script src="/js/library/tippy.min.js"></script>
<script src="/js/library/toastr.min.js"></script>
<script src="/js/library/rangeslider.min.js"></script>
<!-- GLOBAL LOGIC -->
<script src="/js/global.js"></script>
<script type="module">
   import { localStorage } from '/js/utils/index.js';

   if (localStorage.getStore()) {
      const { refreshToken } = localStorage.getStore();
      const logoutBtn = $('.user-options__item.logout');
      logoutBtn.click(async () => {
         console.log('logout clicked !');
         const payload = { refreshToken };
         const { data, status } = await axios.delete('/api/user/logout', { data: payload });
         if (data.status === 'success' && status === 200) {
            localStorage.clearStore();
            window.location.href = '/';
         } else {
            const { status, message } = data;
            toastr[status](message);
         }
      });
   } else {
      console.log('Missing refresh token to logout!');
   }
</script>
<script type="module">
   import { privateRequestHandler, formatToCurrency } from '/js/utils/index.js';
   $(() => {
      const deleteCartBtn = $('.cart-delete');

      deleteCartBtn?.click(async function () {
         const cartItem = $(this).closest('.single-product-cart');
         const productItemID = this.dataset.productId;
         let cartItemPrice = this.dataset.cartPrice;
         let totalPrice = $('.cart-price h4').text();

         function convertFromStringToNumber(stringNumber) {
            const removeUnit = stringNumber.slice(0, stringNumber.length - 4);
            let numberArray = removeUnit.split('.');
            numberArray = numberArray.join('');
            return Number(numberArray);
         }
         cartItemPrice = convertFromStringToNumber(cartItemPrice);
         totalPrice = convertFromStringToNumber(totalPrice);
         const newPrice = totalPrice - cartItemPrice;
         $('.cart-price h4').text(formatToCurrency(newPrice));
         try {
            await privateRequestHandler(`/api/user/delete-cart-item/${productItemID}`, 'delete', {}, (data, status) => {
               toastr[data.status](data.message);
               if (data.status === 'success') {
                  cartItem.remove();
                  const currentCartCount = Number($('.shop-count.pink').text());
                  $('.shop-count.pink').text(currentCartCount - 1);
                  if ($('.cart-scroll-list').children().length === 0) {
                     $('.cart-scroll-list').remove();
                     $('.cart-foot').remove();
                     $('.cart-dropdown')[0].innerHTML = `
                     <div style="flex-direction: column" class="d-flex justify-content-center align-items-center">
                        <i style="font-size: 4rem !important" class="ti-face-sad"> </i>
                        <p style="text-align: center; margin-top: 2rem" class="nothing-title">
                           B·∫°n kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong gi·ªè h√†ng !
                        </p>
                     </div>
                  `;
                  }
               }
            });
         } catch (error) {
            console.log('üöÄ ~ file: foot.ejs ~ line 45 ~ error', error);
            toastr.error('X√≥a s·∫£n ph·∫©m x·∫£y ra l·ªói !');
         }
      });
   });
</script>
